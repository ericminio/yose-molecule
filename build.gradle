plugins {
    id "com.moowork.node" version "0.7"
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'com.moowork.node'

defaultTasks 'build'

repositories {
    mavenCentral()
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

def libs = [
        gson              : 'com.google.code.gson:gson:2.2.4',
        molecule          : 'com.vtence.molecule:molecule:0.4',
        simple            : 'org.simpleframework:simple:5.1.6',
        hamcrest_all      : 'org.hamcrest:hamcrest-all:1.3',
        junit             : 'junit:junit:4.11@jar',
        htmlunit          : 'net.sourceforge.htmlunit:htmlunit:2.14',
        molecule_test     : 'com.vtence.molecule:molecule:0.4-SNAPSHOT:tests',
        selenium_api      : 'org.seleniumhq.selenium:selenium-api:2.41.0',
        selenium_remote   : 'org.seleniumhq.selenium:selenium-remote-driver:2.43.1',
        selenium_firefox  : 'org.seleniumhq.selenium:selenium-firefox-driver:2.43.1',
        selenium_phantom  : 'com.github.detro.ghostdriver:phantomjsdriver:1.1.0',
        windowlicker_core : 'com.googlecode.windowlicker:windowlicker-core:r268@jar',
        windowlicker_web  : 'com.googlecode.windowlicker:windowlicker-web:r268@jar',
]

dependencies {
    compile libs.gson
    compile libs.molecule
    compile libs.simple
    testCompile libs.hamcrest_all
    testCompile libs.junit
    testCompile libs.htmlunit
    testCompile libs.molecule_test
    testCompile libs.selenium_api
    testCompile libs.selenium_firefox
    testCompile(libs.selenium_phantom) {
        exclude module: 'selenium-java'
        exclude module: 'selenium-server'
    }
    testCompile libs.windowlicker_core
    testCompile libs.windowlicker_web
}

mainClassName = 'yose.YosePlayer'
applicationName = 'yose-molecule'

run {
    if (!project.hasProperty('port')) ext.port = 8080
    args port
}

jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}

task coverage(dependsOn: ['test', 'jacocoTestReport'])

task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}

task tests(dependsOn: ['test', 'npm_test'])

task stage(dependsOn: ['clean', 'installApp'])
